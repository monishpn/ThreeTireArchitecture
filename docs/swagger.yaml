basePath: /
definitions:
  models.AddTaskRequest:
    properties:
      task:
        type: string
      userID:
        type: integer
    type: object
  models.Tasks:
    properties:
      completed:
        type: boolean
      task:
        type: string
      tid:
        type: integer
      userID:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: you@example.com
    name: Monish
  description: This is a sample task management API.
  termsOfService: http://swagger.io/terms/
  title: Task API
  version: "1.0"
paths:
  /task:
    get:
      description: Returns a list of all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tasks'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: View all tasks
      tags:
      - task
    post:
      consumes:
      - application/json
      description: Adds a task to the database for a given user
      parameters:
      - description: Task input
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.AddTaskRequest'
      produces:
      - text/plain
      responses:
        "201":
          description: Task added
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add a new task
      tags:
      - task
  /task/{id}:
    delete:
      description: Deletes a task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: Task deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete task
      tags:
      - task
    get:
      description: Retrieves task details by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: Task details
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get task by ID
      tags:
      - task
    put:
      description: Updates task status to complete/incomplete
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: Task updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update task status
      tags:
      - task
swagger: "2.0"
